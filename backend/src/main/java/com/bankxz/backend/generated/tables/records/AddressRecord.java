/*
 * This file is generated by jOOQ.
 */
package com.bankxz.backend.generated.tables.records;


import com.bankxz.backend.generated.tables.Address;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record7<UUID, String, String, String, String, String, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.address.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.address.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.address.postal_code</code>.
     */
    public void setPostalCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.address.postal_code</code>.
     */
    public String getPostalCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.address.city</code>.
     */
    public void setCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.address.city</code>.
     */
    public String getCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.address.street</code>.
     */
    public void setStreet(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.address.street</code>.
     */
    public String getStreet() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.address.house_number</code>.
     */
    public void setHouseNumber(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.address.house_number</code>.
     */
    public String getHouseNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.address.floor</code>.
     */
    public void setFloor(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.address.floor</code>.
     */
    public String getFloor() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.address.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.address.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, String, String, UUID> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, String, String, String, UUID> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Address.ADDRESS.ID;
    }

    @Override
    public Field<String> field2() {
        return Address.ADDRESS.POSTAL_CODE;
    }

    @Override
    public Field<String> field3() {
        return Address.ADDRESS.CITY;
    }

    @Override
    public Field<String> field4() {
        return Address.ADDRESS.STREET;
    }

    @Override
    public Field<String> field5() {
        return Address.ADDRESS.HOUSE_NUMBER;
    }

    @Override
    public Field<String> field6() {
        return Address.ADDRESS.FLOOR;
    }

    @Override
    public Field<UUID> field7() {
        return Address.ADDRESS.USER_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPostalCode();
    }

    @Override
    public String component3() {
        return getCity();
    }

    @Override
    public String component4() {
        return getStreet();
    }

    @Override
    public String component5() {
        return getHouseNumber();
    }

    @Override
    public String component6() {
        return getFloor();
    }

    @Override
    public UUID component7() {
        return getUserId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPostalCode();
    }

    @Override
    public String value3() {
        return getCity();
    }

    @Override
    public String value4() {
        return getStreet();
    }

    @Override
    public String value5() {
        return getHouseNumber();
    }

    @Override
    public String value6() {
        return getFloor();
    }

    @Override
    public UUID value7() {
        return getUserId();
    }

    @Override
    public AddressRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AddressRecord value2(String value) {
        setPostalCode(value);
        return this;
    }

    @Override
    public AddressRecord value3(String value) {
        setCity(value);
        return this;
    }

    @Override
    public AddressRecord value4(String value) {
        setStreet(value);
        return this;
    }

    @Override
    public AddressRecord value5(String value) {
        setHouseNumber(value);
        return this;
    }

    @Override
    public AddressRecord value6(String value) {
        setFloor(value);
        return this;
    }

    @Override
    public AddressRecord value7(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public AddressRecord values(UUID value1, String value2, String value3, String value4, String value5, String value6, UUID value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(UUID id, String postalCode, String city, String street, String houseNumber, String floor, UUID userId) {
        super(Address.ADDRESS);

        setId(id);
        setPostalCode(postalCode);
        setCity(city);
        setStreet(street);
        setHouseNumber(houseNumber);
        setFloor(floor);
        setUserId(userId);
        resetChangedOnNotNull();
    }
}
