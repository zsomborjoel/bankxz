/*
 * This file is generated by jOOQ.
 */
package com.bankxz.backend.generated.tables.daos;


import com.bankxz.backend.generated.tables.Phone;
import com.bankxz.backend.generated.tables.records.PhoneRecord;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PhoneDao extends DAOImpl<PhoneRecord, com.bankxz.backend.generated.tables.pojos.Phone, UUID> {

    /**
     * Create a new PhoneDao without any configuration
     */
    public PhoneDao() {
        super(Phone.PHONE, com.bankxz.backend.generated.tables.pojos.Phone.class);
    }

    /**
     * Create a new PhoneDao with an attached configuration
     */
    @Autowired
    public PhoneDao(Configuration configuration) {
        super(Phone.PHONE, com.bankxz.backend.generated.tables.pojos.Phone.class, configuration);
    }

    @Override
    public UUID getId(com.bankxz.backend.generated.tables.pojos.Phone object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bankxz.backend.generated.tables.pojos.Phone> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Phone.PHONE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bankxz.backend.generated.tables.pojos.Phone> fetchById(UUID... values) {
        return fetch(Phone.PHONE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bankxz.backend.generated.tables.pojos.Phone fetchOneById(UUID value) {
        return fetchOne(Phone.PHONE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bankxz.backend.generated.tables.pojos.Phone> fetchOptionalById(UUID value) {
        return fetchOptional(Phone.PHONE.ID, value);
    }

    /**
     * Fetch records that have <code>number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bankxz.backend.generated.tables.pojos.Phone> fetchRangeOfNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Phone.PHONE.NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>number IN (values)</code>
     */
    public List<com.bankxz.backend.generated.tables.pojos.Phone> fetchByNumber(String... values) {
        return fetch(Phone.PHONE.NUMBER, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bankxz.backend.generated.tables.pojos.Phone> fetchRangeOfUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Phone.PHONE.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.bankxz.backend.generated.tables.pojos.Phone> fetchByUserId(UUID... values) {
        return fetch(Phone.PHONE.USER_ID, values);
    }
}
