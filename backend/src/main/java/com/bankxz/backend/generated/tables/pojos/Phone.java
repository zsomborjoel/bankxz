/*
 * This file is generated by jOOQ.
 */
package com.bankxz.backend.generated.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Phone implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID   id;
    private String number;
    private UUID   userId;

    public Phone() {}

    public Phone(Phone value) {
        this.id = value.id;
        this.number = value.number;
        this.userId = value.userId;
    }

    public Phone(
        UUID   id,
        String number,
        UUID   userId
    ) {
        this.id = id;
        this.number = number;
        this.userId = userId;
    }

    /**
     * Getter for <code>public.phone.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.phone.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.phone.number</code>.
     */
    public String getNumber() {
        return this.number;
    }

    /**
     * Setter for <code>public.phone.number</code>.
     */
    public void setNumber(String number) {
        this.number = number;
    }

    /**
     * Getter for <code>public.phone.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.phone.user_id</code>.
     */
    public void setUserId(UUID userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Phone other = (Phone) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (number == null) {
            if (other.number != null)
                return false;
        }
        else if (!number.equals(other.number))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.number == null) ? 0 : this.number.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Phone (");

        sb.append(id);
        sb.append(", ").append(number);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
